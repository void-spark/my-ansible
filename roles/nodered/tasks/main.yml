- name: store git username
  git_config:
    name: user.name
    scope: global
    value: "{{ git_name }}"

- name: Store git email
  git_config:
    name: user.email
    scope: global
    value: "{{ git_email }}"

- name: Store git credentials
  copy:
    content: "https://{{ git_name }}:{{ git_pw }}@github.com"
    dest: "/root/.git-credentials"
    owner: root
    group: root
    mode: 0600

- name: Use stored git credentials
  git_config:
    name: credential.helper
    scope: global
    value: store

- name: Make local copy of latest Node-RED backup
  synchronize:
    mode: pull
    src: "{{ rsync_backups }}/nodered.tar.gz"
    dest: backups
    archive: false
    checksum: true
  delegate_to: localhost

- name: "Restore Node-RED backup"
  unarchive:
    src: "backups/nodered.tar.gz"
    creates: "/var/docker/data/nodered"
    dest: "/var/docker/data"

- name: "Copy Node-RED compose project"
  copy:
    src: nodered
    dest: /var/docker/compose

- name: "Pull Node-RED image"
  docker_image:
    name: nodered/node-red
    source: pull

- name: "Create and start Node-RED service"
  docker_compose:
    build: yes
    project_src: /var/docker/compose/nodered

- name: "Create Node-RED maintenance cron task"
  cron:
    name: "Node-RED maintenance"
    minute: "10"
    hour: "4"
    user: root
    job: >
      docker pull nodered/node-red &&
      pushd /var/docker/compose/nodered &&
      /usr/local/bin/docker-compose down &&
      tar -czf /var/docker/backups/nodered.tar.gz -C /var/docker/data/ nodered/ &&
      rsync -av --inplace /var/docker/backups/ "{{ rsync_backups }}/" &&
      pushd /tmp &&
      rm -rf node-red-config &&
      git clone https://github.com/void-spark/node-red-config.git &&
      pushd node-red-config &&
      cat /var/docker/data/nodered/flows.json | python -m json.tool > flows_raspberrypi.json &&
      git commit -am "Auto commit `date -Iminutes`" ;
      git push -u origin master ;
      popd &&
      rm -rf node-red-config &&
      popd &&
      /usr/local/bin/docker-compose up -d
    cron_file: nodered-maint

- name: "Set shell for Node-RED maintenance cron task"
  cron:
    name: "SHELL"
    env: yes
    job: "/usr/bin/bash"
    user: root
    cron_file: nodered-maint
